{"componentChunkName":"component---src-root-jsx","path":"/products/deepsparse/enterprise","result":{"data":{"site":{"siteMetadata":{"title":null,"docsLocation":"https://docs.neuralmagic.com"}},"mdx":{"fields":{"id":"d79d91ee-f596-5f3a-aafd-02c85a389909","title":"DeepSparse Enterprise","slug":"/products/deepsparse/enterprise","githubURL":"https://github.com/neuralmagic/docs/blob/main/src/content/products/deepsparse/enterprise.mdx"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"DeepSparse Enterprise\",\n  \"metaTitle\": \"DeepSparse Enterprise\",\n  \"metaDescription\": \"Sparsity-aware neural network inference engine for GPU-class performance on CPUs\",\n  \"index\": 2000\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"div\", {\n    \"style\": {\n      \"display\": \"flex\",\n      \"flexDirection\": \"column\"\n    }\n  }, \"\\n  \", mdx(\"h1\", {\n    parentName: \"div\"\n  }, \"\\n    \", mdx(\"img\", {\n    parentName: \"h1\",\n    \"alt\": \"tool icon\",\n    \"src\": \"https://raw.githubusercontent.com/neuralmagic/deepsparse/main/docs/source/icon-deepsparse.png\"\n  }), \"\\n    \\xA0\\xA0DeepSparse Enterprise\\n  \"), \"\\n  \", mdx(\"h3\", {\n    parentName: \"div\"\n  }, \" An inference runtime offering GPU-class performance on CPUs and APIs to integrate ML into your application\"), \"\\n  \", mdx(\"div\", {\n    parentName: \"div\",\n    \"style\": {\n      \"display\": \"flex\",\n      \"flexWrap\": \"wrap\"\n    }\n  }, \"\\n    \", mdx(\"a\", {\n    parentName: \"div\",\n    \"href\": \"https://docs.neuralmagic.com/products/deepsparse/\"\n  }, \"\\n      \", mdx(\"img\", {\n    parentName: \"a\",\n    \"alt\": \"Documentation\",\n    \"src\": \"https://img.shields.io/badge/documentation-darkred?&style=for-the-badge&logo=read-the-docs\",\n    \"height\": 25\n  }), \"\\n    \"), \"\\n    \", mdx(\"a\", {\n    parentName: \"div\",\n    \"href\": \"https://join.slack.com/t/discuss-neuralmagic/shared_invite/zt-q1a1cnvo-YBoICSIw3L1dmQpjBeDurQ/\"\n  }, \"\\n      \", mdx(\"img\", {\n    parentName: \"a\",\n    \"alt\": \"Slack\",\n    \"src\": \"https://img.shields.io/badge/slack-purple?style=for-the-badge&logo=slack\",\n    \"height\": 25\n  }), \"\\n    \"), \"\\n    \", mdx(\"a\", {\n    parentName: \"div\",\n    \"href\": \"https://github.com/neuralmagic/deepsparse/issues/\"\n  }, \"\\n      \", mdx(\"img\", {\n    parentName: \"a\",\n    \"alt\": \"Support\",\n    \"src\": \"https://img.shields.io/badge/support%20forums-navy?style=for-the-badge&logo=github\",\n    \"height\": 25\n  }), \"\\n    \"), \"\\n    \", mdx(\"a\", {\n    parentName: \"div\",\n    \"href\": \"https://github.com/neuralmagic/deepsparse/actions/workflows/quality-check.yaml\"\n  }, \"\\n      \", mdx(\"img\", {\n    parentName: \"a\",\n    \"alt\": \"Main\",\n    \"src\": \"https://img.shields.io/github/workflow/status/neuralmagic/deepsparse/Quality%20Checks/main?label=build&style=for-the-badge\",\n    \"height\": 25\n  }), \"\\n    \"), \"\\n    \", mdx(\"a\", {\n    parentName: \"div\",\n    \"href\": \"https://github.com/neuralmagic/deepsparse/releases\"\n  }, \"\\n      \", mdx(\"img\", {\n    parentName: \"a\",\n    \"alt\": \"GitHub release\",\n    \"src\": \"https://img.shields.io/github/release/neuralmagic/deepsparse.svg?style=for-the-badge\",\n    \"height\": 25\n  }), \"\\n    \"), \"\\n    \", mdx(\"a\", {\n    parentName: \"div\",\n    \"href\": \"https://github.com/neuralmagic/deepsparse/blob/main/CODE_OF_CONDUCT.md\"\n  }, \"\\n      \", mdx(\"img\", {\n    parentName: \"a\",\n    \"alt\": \"Contributor Covenant\",\n    \"src\": \"https://img.shields.io/badge/Contributor%20Covenant-v2.1%20adopted-ff69b4.svg?color=yellow&style=for-the-badge\",\n    \"height\": 25\n  }), \"\\n    \"), \"\\n    \", mdx(\"a\", {\n    parentName: \"div\",\n    \"href\": \"https://www.youtube.com/channel/UCo8dO_WMGYbWCRnj_Dxr4EA\"\n  }, \"\\n      \", mdx(\"img\", {\n    parentName: \"a\",\n    \"alt\": \"YouTube\",\n    \"src\": \"https://img.shields.io/badge/-YouTube-red?&style=for-the-badge&logo=youtube&logoColor=white\",\n    \"height\": 25\n  }), \"\\n    \"), \"\\n    \", mdx(\"a\", {\n    parentName: \"div\",\n    \"href\": \"https://medium.com/limitlessai\"\n  }, \"\\n      \", mdx(\"img\", {\n    parentName: \"a\",\n    \"alt\": \"Medium\",\n    \"src\": \"https://img.shields.io/badge/medium-%2312100E.svg?&style=for-the-badge&logo=medium&logoColor=white\",\n    \"height\": 25\n  }), \"\\n    \"), \"\\n    \", mdx(\"a\", {\n    parentName: \"div\",\n    \"href\": \"https://twitter.com/neuralmagic\"\n  }, \"\\n      \", mdx(\"img\", {\n    parentName: \"a\",\n    \"alt\": \"Twitter\",\n    \"src\": \"https://img.shields.io/twitter/follow/neuralmagic?color=darkgreen&label=Follow&style=social\",\n    \"height\": 25\n  }), \"\\n    \"), \"\\n  \")), mdx(\"p\", null, \"DeepSparse is an inference runtime that offers GPU-class performance on CPUs by utilizing sparsity. DeepSparse accepts models in the ONNX format, giving you flexibility to serve your model in a framework-agnostic manner.\\nDeepSparse Enterprise requires a Trial License or \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://neuralmagic.com/legal/master-software-license-and-service-agreement/\"\n  }, \"can be fully licensed\"), \" for production, commercial applications. (Alternatively, the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.neuralmagic.com/products/deepsparse\"\n  }, \"The Community Edition\"), \" is open-source and free for evaluation, research, and non-production.)\"), mdx(\"p\", null, \"Neural Magic's DeepSparse is able to integrate into popular deep learning libraries (e.g., Hugging Face, Ultralytics) allowing you to leverage DeepSparse for loading and deploying sparse models with ONNX.\\nONNX gives the flexibility to serve your model in a framework-agnostic environment.\\nSupport includes \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pytorch.org/docs/stable/onnx.html\"\n  }, \"PyTorch,\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/onnx/tensorflow-onnx\"\n  }, \"TensorFlow,\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/onnx/keras-onnx\"\n  }, \"Keras,\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/onnx/onnxmltools\"\n  }, \"many other frameworks\"), \".\"), mdx(\"p\", null, \"DeepSparse is available in two editions:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.neuralmagic.com/products/deepsparse\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"DeepSparse Community\")), \" is open-source and free for evaluation, research, and non-production use with our \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://neuralmagic.com/legal/engine-license-agreement/\"\n  }, \"DeepSparse Community License\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#installation\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"DeepSparse Enterprise\")), \" requires a Trial License or \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://neuralmagic.com/legal/master-software-license-and-service-agreement/\"\n  }, \"can be fully licensed\"), \" for production, commercial applications.\")), mdx(\"h2\", null, \"Features\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD83D\\uDD0C \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/neuralmagic/deepsparse/tree/main/src/deepsparse/server\"\n  }, \"DeepSparse Server\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD83D\\uDCDC \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/neuralmagic/deepsparse/tree/main/src/deepsparse/benchmark\"\n  }, \"DeepSparse Benchmark\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD83D\\uDC69\\u200D\\uD83D\\uDCBB \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/neuralmagic/deepsparse/tree/main/examples\"\n  }, \"NLP and Computer Vision Tasks Supported\"))), mdx(\"h2\", null, \"Hardware Support and System Requirements\"), mdx(\"p\", null, \"Review \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/user-guide/deepsparse-engine/hardware-support\"\n  }, \"Supported Hardware for DeepSparse\"), \" to understand system requirements.\\nDeepSparse works natively on Linux. Mac and Windows require running Linux in a Docker or virtual machine; it will not run natively on those operating systems.\"), mdx(\"p\", null, \"DeepSparse is tested on Python 3.7-3.10, ONNX 1.5.0-1.12.0, ONNX opset version 11+, and manylinux compliant systems.\\nUsing a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.python.org/3/library/venv.html\"\n  }, \"virtual environment\"), \" is highly recommended.\"), mdx(\"h2\", null, \"Installation\"), mdx(\"p\", null, \"Install DeepSparse Enterprise with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pip\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"pip install deepsparse-ent\\n\")), mdx(\"p\", null, \"See the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/get-started/install/deepsparse-ent\"\n  }, \"DeepSparse Enterprise Installation page\"), \" for further installation options.\"), mdx(\"h2\", null, \"Getting a License\"), mdx(\"p\", null, \"DeepSparse Enterprise requires a valid license to run the engine and can be licensed for production, commercial applications.\\nThere are two options available:\"), mdx(\"h3\", null, \"90-Day Enterprise Trial License\"), mdx(\"p\", null, \"To try out DeepSparse Enterprise and get a Neural Magic Trial License, complete our \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://neuralmagic.com/deepsparse-engine-free-trial\"\n  }, \"registration form\"), \".\\nUpon submission, the license will be emailed to you and your 90-day term starts right then.\"), mdx(\"h3\", null, \"DeepSparse Enterprise License\"), mdx(\"p\", null, \"To learn more about DeepSparse Enterprise pricing, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://neuralmagic.com/deepsparse-engine/#form\"\n  }, \"contact our Sales team\"), \" to discuss your use case further for a custom quote.\"), mdx(\"h2\", null, \"Installing a License\"), mdx(\"p\", null, \"Once you have obtained a license, you will need to initialize it to be able to run DeepSparse Enterprise.\\nYou can initialize your license by running:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"deepsparse.license <license_string> or <path/to/license.txt>\\n\")), mdx(\"p\", null, \"To initialize a license on a machine:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Confirm you have deepsparse-ent installed in a fresh virtual environment.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Installing deepsparse and deepsparse-ent on the same virtual environment may result in unsupported behaviors.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Run \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"deepsparse.license\"), \" with the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<license_string>\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"path/to/license.txt\"), \" as an argument:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"deepsparse.license <samplelicensetring>\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"deepsparse.license ./license.txt\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"If successful, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"deepsparse.license\"), \" will write the license file to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"~/.config/neuralmagic/license.txt\"), \". You may overwrite this path by setting the environment variable \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"NM_CONFIG_DIR\"), \" (before and after running the script) with the following command:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"export NM_CONFIG_DIR=path/to/license.txt\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Once the license is authenticated, you should see a splash message indicating that you are now running DeepSparse Enterprise.\")), mdx(\"p\", null, \"If you encounter issues initializing your DeepSparse Enterprise License, contact \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"mailto:license@neuralmagic.com\"\n  }, \"license@neuralmagic.com\"), \" for help.\"), mdx(\"h2\", null, \"Validating a License\"), mdx(\"p\", null, \"Once you have initialized your license, you may want to check that it is still valid before running a workload on DeepSparse Enterprise. To confirm your license is still active with DeepSparse Enterprise, run the command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"deepsparse.validate_license\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deepsparse.validate_license\"), \" can be run with no arguments, which will reference an existing environment variable (if set), or with one argument that is a reference to the license and can be referenced in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deepsparse.validate_license\"), \" command as  \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"path/to/license.txt\"), \".\"), mdx(\"p\", null, \"To validate a license on a machine:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"If you have successfully run \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"deepsparse.license\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"deepsparse.validate_license\"), \" can be used to validate that the license file is in the correct location:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Run the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"deepsparse.validate_license\"), \" with no arguments. If the referenced license is valid, the DeepSparse Enterprise splash screen should display in your terminal window.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"NM_CONFIG_DIR\"), \" environment variable was set when creating the license, ensure this variable is still set to the same value.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"If you want to supply the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"path/to/license.txt\"), \":\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Run \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"deepsparse.validate_license\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"path/to/license.txt\"), \" as an argument as:\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"deepsparse.validate_license --license_path path/to/license.txt\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If the referenced license is valid, the DeepSparse Enterprise splash screen should display in your terminal window.\")))), mdx(\"h2\", null, \"DeepSparse Enterprise Features\"), mdx(\"h3\", null, \"DeepSparse Server\"), mdx(\"p\", null, \"The DeepSparse Server allows you to serve models and pipelines from the terminal. The server runs on top of the popular FastAPI web framework and Uvicorn web server.\"), mdx(\"p\", null, \"Install the server with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pip\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"pip install deepsparse-ent[server]\\n\")), mdx(\"h4\", null, \"Single Model\"), mdx(\"p\", null, \"Once installed, the following example CLI command is available for running inference with a single BERT model:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"deepsparse.server \\\\\\n    task question_answering \\\\\\n    --model_path \\\"zoo:nlp/question_answering/bert-base/pytorch/huggingface/squad/12layer_pruned80_quant-none-vnni\\\"\\n\")), mdx(\"p\", null, \"To look up arguments run, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deepsparse.server --help\"), \".\"), mdx(\"h4\", null, \"Multiple Models\"), mdx(\"p\", null, \"To serve multiple models in your deployment you can easily build a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"config.yaml\"), \". In the example below, we define two BERT models in our configuration for the question answering task:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"num_cores: 1\\nnum_workers: 1\\nendpoints:\\n    - task: question_answering\\n      route: /predict/question_answering/base\\n      model: zoo:nlp/question_answering/bert-base/pytorch/huggingface/squad/base-none\\n      batch_size: 1\\n    - task: question_answering\\n      route: /predict/question_answering/pruned_quant\\n      model: zoo:nlp/question_answering/bert-base/pytorch/huggingface/squad/12layer_pruned80_quant-none-vnni\\n      batch_size: 1\\n\")), mdx(\"p\", null, \"Finally, after your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"config.yaml\"), \" file is built, run the server with the configuration file path as an argument:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"deepsparse.server config config.yaml\\n\")), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/neuralmagic/deepsparse/tree/main/src/deepsparse/server\"\n  }, \"Getting Started with DeepSparse Server\"), \" for more information.\"), mdx(\"h3\", null, \"DeepSparse Benchmark\"), mdx(\"p\", null, \"The benchmark tool is available on your CLI to run expressive model benchmarks with DeepSparse.\"), mdx(\"p\", null, \"Run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"deepsparse.benchmark -h\"), \" to look up arguments:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"deepsparse.benchmark [-h] [-b BATCH_SIZE] [-shapes INPUT_SHAPES]\\n                          [-ncores NUM_CORES] [-s {async,sync}] [-t TIME]\\n                          [-nstreams NUM_STREAMS] [-pin {none,core,numa}]\\n                          [-q] [-x EXPORT_PATH]\\n                          model_path\\n\\n\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/neuralmagic/deepsparse/tree/main/src/deepsparse/benchmark\"\n  }, \"Getting Started with CLI Benchmarking\"), \" includes examples of select inference scenarios:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Synchronous (Single-stream) Scenario\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Asynchronous (Multi-stream) Scenario\")), mdx(\"h3\", null, \"NLP and Computer Vision Tasks Supported\"), mdx(\"p\", null, \"An NLP inference example is:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"from deepsparse import Pipeline\\n\\n# SparseZoo model stub or path to ONNX file\\nmodel_path = \\\"zoo:nlp/question_answering/bert-base/pytorch/huggingface/squad/12layer_pruned80_quant-none-vnni\\\"\\n\\nqa_pipeline = Pipeline.create(\\n    task=\\\"question-answering\\\",\\n    model_path=model_path,\\n)\\n\\nmy_name = qa_pipeline(question=\\\"What's my name?\\\", context=\\\"My name is Snorlax\\\")\\n\")), mdx(\"p\", null, \"Refer also to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/neuralmagic/deepsparse/blob/main/src/deepsparse/PIPELINES.md\"\n  }, \"NLP and Computer Vision Tasks Supported\"), \".\"), mdx(\"p\", null, \"For NLP tutorials, see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/neuralmagic/deepsparse/tree/main/examples/huggingface-transformers\"\n  }, \"Getting Started with Hugging Face Transformers\"), \".\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"For Image Classification tutorials, see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/neuralmagic/deepsparse/tree/main/src/deepsparse/image_classification\"\n  }, \"Image Classification Inference Pipelines\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"For Object Detection tutorials, see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/neuralmagic/deepsparse/tree/main/src/deepsparse/yolo\"\n  }, \"YOLOv5 Inference Pipelines\"), \". \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"For Segmentation tutorials, see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/neuralmagic/deepsparse/tree/main/src/deepsparse/yolact\"\n  }, \"YOLACT Inference Pipelines\"), \".\"))), mdx(\"p\", null, \"Supported NLP tasks include:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://neuralmagic.com/use-cases/sparse-named-entity-recognition/\"\n  }, \"Token Classification: Named Entity Recognition\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://neuralmagic.com/use-cases/sparse-multi-class-text-classification/\"\n  }, \"Text Classification: Multi-Class\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://neuralmagic.com/use-cases/sparse-binary-text-classification/\"\n  }, \"Text Classification: Binary\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://neuralmagic.com/use-cases/sparse-sentiment-analysis/\"\n  }, \"Text Classification: Sentiment Analysis\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://neuralmagic.com/use-cases/sparse-question-answering/\"\n  }, \"Question Answering\"))), mdx(\"h3\", null, \"SparseZoo ONNX vs. Custom ONNX Models\"), mdx(\"p\", null, \"DeepSparse can accept ONNX models from two sources:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"SparseZoo ONNX\"), \": \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/neuralmagic/sparsezoo\"\n  }, \"SparseZoo\"), \" hosts open-source inference-optimized models, trained on repeatable sparsification recipes using state-of-the-art techniques from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/neuralmagic/sparseml\"\n  }, \"SparseML\"), \". The ONNX representation of each model is available for download.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Custom ONNX\"), \": DeepSparse allows you to use your own model in ONNX format. It can be dense or sparse. Plug in your model to compare performance with other solutions.\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"> wget https://github.com/onnx/models/raw/main/vision/classification/mobilenet/model/mobilenetv2-7.onnx\\nSaving to: \\u2018mobilenetv2-7.onnx\\u2019\\n\")), mdx(\"p\", null, \"Here is a custom ONNX Benchmark example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"from deepsparse import compile_model\\nfrom deepsparse.utils import generate_random_inputs\\nonnx_filepath = \\\"mobilenetv2-7.onnx\\\"\\nbatch_size = 16\\n\\n# Generate random sample input\\ninputs = generate_random_inputs(onnx_filepath, batch_size)\\n\\n# Compile and run\\nengine = compile_model(onnx_filepath, batch_size)\\noutputs = engine.run(inputs)\\n\")), mdx(\"p\", null, \"The \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/neuralmagic/deepsparse\"\n  }, \"GitHub repository\"), \" includes package APIs along with examples to quickly get started benchmarking and inferencing sparse models.\"), mdx(\"h3\", null, \"Scheduling Single-Stream, Multi-Stream, and Elastic Inference\"), mdx(\"p\", null, \"DeepSparse offers three inference modes based on your use case. Refer also to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/neuralmagic/deepsparse/blob/main/docs/source/scheduler.md\"\n  }, \"Inference Modes\"), \".\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Single-stream scheduling (the default) is the latency/synchronous scenario. Requests execute serially.\"), mdx(\"undefined\", {\n    parentName: \"li\"\n  }, mdx(\"img\", {\n    \"src\": \"https://raw.githubusercontent.com/neuralmagic/deepsparse/main/docs/source/single-stream.png\",\n    \"alt\": \"single stream diagram\"\n  }), \"\\nUse Case: It's highly optimized for minimum per-request latency, using all of the system's resources provided to it on every request it gets.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Multi-stream scheduling is the throughput/asynchronous scenario. Requests execute in parallel.\"), mdx(\"undefined\", {\n    parentName: \"li\"\n  }, mdx(\"img\", {\n    \"src\": \"https://raw.githubusercontent.com/neuralmagic/deepsparse/main/docs/source/multi-stream.png\",\n    \"alt\": \"multi stream diagram\"\n  }), \"\\nUse Case: The most common use cases for the multi-stream scheduler are those in which parallelism is low with respect to core count, and requests need to be made asynchronously without time to batch them.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Elastic scheduling requests execute in parallel, but not multiplexed on individual NUMA nodes.\\nUse Case: A workload that might benefit from the elastic scheduler is one in which multiple requests need to be handled simultaneously, but where performance is hindered when those requests have to share an L3 cache.\"))), mdx(\"h2\", null, \"Resources\"), mdx(\"h4\", null, \"Libraries\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.neuralmagic.com/products/deepsparse/\"\n  }, \"DeepSparse\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.neuralmagic.com/products/sparseml/\"\n  }, \"SparseML\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.neuralmagic.com/products/sparsezoo/\"\n  }, \"SparseZoo\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.neuralmagic.com/products/sparsify/\"\n  }, \"Sparsify\"))), mdx(\"h4\", null, \"Versions\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://pypi.org/project/deepsparse\"\n  }, \"DeepSparse\"), \" | stable\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://pypi.org/project/deepsparse-nightly/\"\n  }, \"DeepSparse-Nightly\"), \" | nightly (dev)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/neuralmagic/deepsparse/releases\"\n  }, \"GitHub\"), \" | releases\")), mdx(\"h4\", null, \"Info\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.neuralmagic.com/blog/\"\n  }, \"Blog\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.neuralmagic.com/resources/\"\n  }, \"Resources\"))), mdx(\"h3\", null, \"License\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.neuralmagic.com/products/deepsparse-ent\"\n  }, \"DeepSparse Enterprise\"), \" requires a Trial License or \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://neuralmagic.com/legal/master-software-license-and-service-agreement/\"\n  }, \"can be fully licensed\"), \" for production, commercial applications.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#features","title":"Features"},{"url":"#hardware-support-and-system-requirements","title":"Hardware Support and System Requirements"},{"url":"#installation","title":"Installation"},{"url":"#getting-a-license","title":"Getting a License","items":[{"url":"#90-day-enterprise-trial-license","title":"90-Day Enterprise Trial License"},{"url":"#deepsparse-enterprise-license","title":"DeepSparse Enterprise License"}]},{"url":"#installing-a-license","title":"Installing a License"},{"url":"#validating-a-license","title":"Validating a License"},{"url":"#deepsparse-enterprise-features","title":"DeepSparse Enterprise Features","items":[{"url":"#deepsparse-server","title":"DeepSparse Server","items":[{"url":"#single-model","title":"Single Model"},{"url":"#multiple-models","title":"Multiple Models"}]},{"url":"#deepsparse-benchmark","title":"DeepSparse Benchmark"},{"url":"#nlp-and-computer-vision-tasks-supported","title":"NLP and Computer Vision Tasks Supported"},{"url":"#sparsezoo-onnx-vs-custom-onnx-models","title":"SparseZoo ONNX vs. Custom ONNX Models"},{"url":"#scheduling-single-stream-multi-stream-and-elastic-inference","title":"Scheduling Single-Stream, Multi-Stream, and Elastic Inference"}]},{"url":"#resources","title":"Resources","items":[{"items":[{"url":"#libraries","title":"Libraries"},{"url":"#versions","title":"Versions"},{"url":"#info","title":"Info"}]},{"url":"#license","title":"License"}]}]},"parent":{"relativePath":"products/deepsparse/enterprise.mdx"},"frontmatter":{"metaTitle":"DeepSparse Enterprise","metaDescription":"Sparsity-aware neural network inference engine for GPU-class performance on CPUs","index":2000,"skipToChild":null}},"allMdx":{"edges":[{"node":{"fields":{"id":"bfcfecba-6eb1-59e8-8379-9c6d0c7a6a46","slug":"/get-started","title":"Get Started"},"frontmatter":{"index":1000,"targetURL":null,"skipToChild":true,"metaTitle":"Get Started","metaDescription":"Getting started with the Neural Magic Platform"}}},{"node":{"fields":{"id":"6de4cf37-632d-538c-891b-c1d714aa5ba7","slug":"/user-guide/deepsparse-engine","title":"DeepSparse"},"frontmatter":{"index":4000,"targetURL":null,"skipToChild":null,"metaTitle":"User Guides for DeepSparse Engine","metaDescription":"User Guides for DeepSparse Engine"}}},{"node":{"fields":{"id":"074b52b4-5a0c-5e81-8998-7935ee5884dd","slug":"/user-guide/deploying-deepsparse","title":"Deploying DeepSparse"},"frontmatter":{"index":5000,"targetURL":null,"skipToChild":null,"metaTitle":"Deploying DeepSparse","metaDescription":"Deploying Deepsparse"}}},{"node":{"fields":{"id":"fdeaab76-0a46-53d8-b550-27618ff594b8","slug":"/user-guide/onnx-export","title":"ONNX Export"},"frontmatter":{"index":3000,"targetURL":null,"skipToChild":null,"metaTitle":"Exporting to the ONNX Format","metaDescription":"Exporting to the ONNX Format"}}},{"node":{"fields":{"id":"2a1b6bd9-94f8-5496-a417-57661adf7072","slug":"/user-guide/recipes","title":"Recipes"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":null,"metaTitle":"What are Sparsification Recipes?","metaDescription":"Description of sparsification recipes enabling smaller and more performant neural networks in deep learning"}}},{"node":{"fields":{"id":"220abd27-24cf-5408-9402-3e7b0591a7ec","slug":"/details","title":"Details"},"frontmatter":{"index":5000,"targetURL":null,"skipToChild":true,"metaTitle":"Details","metaDescription":"Details"}}},{"node":{"fields":{"id":"0a2bc29c-0df2-59e5-a94c-bce091e6dc6d","slug":"/use-cases","title":"Use Cases"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":true,"metaTitle":"Use Cases","metaDescription":"Use Cases for the Neural Magic Platform"}}},{"node":{"fields":{"id":"2f8c5030-68ad-5e55-9afd-f536f6dba76e","slug":"/user-guide/recipes/creating","title":"Creating"},"frontmatter":{"index":1000,"targetURL":null,"skipToChild":null,"metaTitle":"Creating Sparsification Recipes","metaDescription":"Creating Sparsification Recipes"}}},{"node":{"fields":{"id":"5ca8c395-cc4e-599a-a34f-3a3324a476bd","slug":"/user-guide/recipes/enabling","title":"Enabling Pipelines"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":null,"metaTitle":"Enabling Pipelines to work with SparseML Recipes","metaDescription":"Enabling Pipelines to work with SparseML Recipess"}}},{"node":{"fields":{"id":"09748e8f-d660-55d9-b9aa-88936b02bddb","slug":"/user-guide/deploying-deepsparse/aws-lambda","title":"AWS Lambda"},"frontmatter":{"index":3000,"targetURL":null,"skipToChild":null,"metaTitle":"Using DeepSparse on AWS Lambda","metaDescription":"Deploy DeepSparse in a Serverless framework with AWS Lambda"}}},{"node":{"fields":{"id":"db325d26-0f07-520e-8061-c2e7751c3140","slug":"/user-guide/deploying-deepsparse/aws-sagemaker","title":"AWS SageMaker"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":null,"metaTitle":"Deploying with DeepSparse on AWS SageMaker","metaDescription":"Deploying with DeepSparse on AWS SageMaker for faster and cheaper model deployments behind an HTTP API"}}},{"node":{"fields":{"id":"c1d1d524-e761-5294-a8e7-e21f3164f48a","slug":"/","title":"Home"},"frontmatter":{"index":0,"targetURL":null,"skipToChild":null,"metaTitle":"Neural Magic Documentation","metaDescription":"Documentation for the Neural Magic Platform"}}},{"node":{"fields":{"id":"36f2d780-8139-53d0-b65e-32f4f6bc5669","slug":"/user-guide/deepsparse-engine/benchmarking","title":"Benchmarking"},"frontmatter":{"index":3000,"targetURL":null,"skipToChild":null,"metaTitle":"Benchmarking ONNX Models with DeepSparse","metaDescription":"Benchmarking ONNX Models with DeepSparse"}}},{"node":{"fields":{"id":"3bf0f57a-a959-54ad-a97a-8422a60614a5","slug":"/user-guide/deploying-deepsparse/deepsparse-server","title":"DeepSparse Server"},"frontmatter":{"index":1000,"targetURL":null,"skipToChild":null,"metaTitle":"Deploying with DeepSparse Server","metaDescription":"Deploying with DeepSparse Server for faster and cheaper model deployments behind an HTTP API"}}},{"node":{"fields":{"id":"9a8b7c59-8b98-55a2-bc6e-eb337124b87a","slug":"/user-guide/deepsparse-engine/diagnostics-debugging","title":"Diagnostics/Debugging"},"frontmatter":{"index":4000,"targetURL":null,"skipToChild":null,"metaTitle":"Logging Guidance for Diagnostics and Debugging","metaDescription":"Logging Guidance for Diagnostics and Debugging"}}},{"node":{"fields":{"id":"17dc434c-a12b-5cc2-b05b-535817f6c52e","slug":"/user-guide/deepsparse-engine/hardware-support","title":"Supported Hardware"},"frontmatter":{"index":1000,"targetURL":null,"skipToChild":null,"metaTitle":"Supported Hardware for DeepSparse","metaDescription":"Supported Hardware for DeepSparse including CPU types and instruction sets"}}},{"node":{"fields":{"id":"e50b48c5-9aa5-5bcc-a414-bbd93bcf9529","slug":"/user-guide/deepsparse-engine/logging","title":"Logging"},"frontmatter":{"index":6000,"targetURL":null,"skipToChild":null,"metaTitle":"DeepSparse Logging","metaDescription":"System and Data Logging with DeepSparse"}}},{"node":{"fields":{"id":"e7984872-dbcf-56f5-812a-79d6a6704eed","slug":"/user-guide/deploying-deepsparse/google-cloud-run","title":"Google Cloud Run"},"frontmatter":{"index":4000,"targetURL":null,"skipToChild":null,"metaTitle":"Using DeepSparse on Google Cloud Run","metaDescription":"Deploy DeepSparse in a Serverless framework with Google Cloud Run"}}},{"node":{"fields":{"id":"9c0d068e-d7b6-5bb2-bc60-e00c2f1cbb9a","slug":"/user-guide/deepsparse-engine/scheduler","title":"Inference Types"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":null,"metaTitle":"Inference Types with DeepSparse Scheduler","metaDescription":"Inference Types with DeepSparse Scheduler"}}},{"node":{"fields":{"id":"ee9f8c1f-d776-5134-89e6-b60f31e11b65","slug":"/products","title":"Products"},"frontmatter":{"index":4000,"targetURL":null,"skipToChild":true,"metaTitle":"Products","metaDescription":"Products"}}},{"node":{"fields":{"id":"4466cba0-549b-59cc-a7b9-7551a28e443b","slug":"/user-guide/deepsparse-engine/numactl-utility","title":"numactl Utility"},"frontmatter":{"index":5000,"targetURL":null,"skipToChild":null,"metaTitle":"Using the numactl Utility to Control Resource Utilization with DeepSparse","metaDescription":"Using the numactl Utility to Control Resource Utilization with DeepSparse"}}},{"node":{"fields":{"id":"cb110562-39fa-51de-bde9-4c8a848f0223","slug":"/user-guide/sparsification","title":"Sparsification"},"frontmatter":{"index":1000,"targetURL":null,"skipToChild":null,"metaTitle":"What is Sparsification?","metaDescription":"Description of model sparsification enabling smaller and more performant neural networks in deep learning"}}},{"node":{"fields":{"id":"baad04ad-efd7-5e85-8645-6455fce34324","slug":"/use-cases/image-classification","title":"Image Classification"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":true,"metaTitle":"Image Classification","metaDescription":"Image Classification with PyTorch Torchvision"}}},{"node":{"fields":{"id":"d1d7a8f3-9061-539a-aff8-d3957da959c6","slug":"/use-cases/object-detection/deploying","title":"Deploying"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":null,"metaTitle":"Object Detection Deployments with DeepSparse","metaDescription":"Object Detection deployments with Ultralytics YOLOv5 and DeepSparse to create cheaper and more performant models"}}},{"node":{"fields":{"id":"3f751c96-1e87-5f4a-a0cb-d277724c2a0b","slug":"/use-cases/object-detection/sparsifying","title":"Sparsifying"},"frontmatter":{"index":1000,"targetURL":null,"skipToChild":null,"metaTitle":"Sparsifying Object Detection with Ultralytics YOLOv5 and SparseML","metaDescription":"Sparsifying Object Detection with Ultralytics YOLOv5 and SparseML to create cheaper and more performant models"}}},{"node":{"fields":{"id":"bd363f12-8b17-5aac-af39-0ae0e7b0b829","slug":"/use-cases/natural-language-processing/question-answering","title":"Question Answering"},"frontmatter":{"index":1000,"targetURL":null,"skipToChild":null,"metaTitle":"NLP Question Answering","metaDescription":"Question Answering with Hugging Face Transformers and SparseML to create cheaper and more performant NLP models"}}},{"node":{"fields":{"id":"ae7d3726-718a-5be3-91a4-2559a2445fc4","slug":"/use-cases/natural-language-processing/text-classification","title":"Text Classification"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":null,"metaTitle":"NLP Text Classification","metaDescription":"Text Classification with Hugging Face Transformers and SparseML to create cheaper and more performant NLP models"}}},{"node":{"fields":{"id":"c3c4bea9-f7cd-5044-9f34-8e33c8d2b36d","slug":"/use-cases/natural-language-processing/token-classification","title":"Token Classification"},"frontmatter":{"index":3000,"targetURL":null,"skipToChild":null,"metaTitle":"NLP Token Classification","metaDescription":"Token Classification with Hugging Face Transformers and SparseML to create cheaper and more performant NLP models"}}},{"node":{"fields":{"id":"0d031520-ee95-58db-bdb3-86689d6a0941","slug":"/use-cases/image-classification/deploying","title":"Deploying"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":null,"metaTitle":"Image Classification Deployments with DeepSparse","metaDescription":"Image Classification deployments with DeepSparse to create cheaper and more performant models"}}},{"node":{"fields":{"id":"3b06a681-3381-5cdc-9dad-827cdc6f60ac","slug":"/use-cases/deploying-deepsparse/docker","title":"Docker"},"frontmatter":{"index":3000,"targetURL":null,"skipToChild":null,"metaTitle":"Using/Creating a DeepSparse Docker Image","metaDescription":"Using/Creating a DeepSparse Docker Image for repeatable build processes"}}},{"node":{"fields":{"id":"ecaebb25-0fd8-572a-9d98-52302d0a0e4e","slug":"/use-cases/image-classification/sparsifying","title":"Sparsifying"},"frontmatter":{"index":1000,"targetURL":null,"skipToChild":null,"metaTitle":"Sparsifying Image Classification Models with SparseML","metaDescription":"Sparsifying Image Classification models with SparseML to create cheaper and more performant models"}}},{"node":{"fields":{"id":"4ba00f44-34e5-5677-a8c6-862b44d48e7f","slug":"/products/deepsparse","title":"DeepSparse"},"frontmatter":{"index":0,"targetURL":null,"skipToChild":null,"metaTitle":"DeepSparse","metaDescription":"Sparsity-aware neural network inference engine for GPU-class performance on CPUs"}}},{"node":{"fields":{"id":"b7365467-d2b2-5dad-be10-a3aaa773d3a3","slug":"/use-cases/natural-language-processing","title":"Natural Language Processing"},"frontmatter":{"index":1000,"targetURL":null,"skipToChild":true,"metaTitle":"Natural Language Processing","metaDescription":"NLP with HuggingFace Transformers"}}},{"node":{"fields":{"id":"76657780-4f8a-5f37-8f3c-1c6c04637503","slug":"/products/sparseml","title":"SparseML"},"frontmatter":{"index":1000,"targetURL":null,"skipToChild":null,"metaTitle":"SparseML","metaDescription":"Sparsity-aware neural network inference engine for GPU-class performance on CPUs"}}},{"node":{"fields":{"id":"1ef7c7c8-073e-5abf-b57a-af03628c0714","slug":"/use-cases/object-detection","title":"Object Detection"},"frontmatter":{"index":3000,"targetURL":null,"skipToChild":true,"metaTitle":"Object Detection","metaDescription":"Object Detection with Ultralytics YOLOv5"}}},{"node":{"fields":{"id":"08d07abb-4c37-5f58-8bdd-277facdeaf05","slug":"/products/sparsezoo/cli","title":"CLI"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":null,"metaTitle":"SparseML CLI","metaDescription":"Documentation for the CLI commands installed with SparseZoo enabling use of SOTA sparsified models and recipes"}}},{"node":{"fields":{"id":"aafbc5b1-5291-5291-ab86-da09c479a4c1","slug":"/products/sparsezoo/python-api","title":"Python API"},"frontmatter":{"index":3000,"targetURL":null,"skipToChild":null,"metaTitle":"SparseML Python API","metaDescription":"Documentation for the Python APIs available with SparseZoo enabling use of SOTA sparsified models and recipes"}}},{"node":{"fields":{"id":"97cb8313-bc03-5a24-bf92-015086fc9071","slug":"/products/sparsezoo/models","title":"Models"},"frontmatter":{"index":1000,"targetURL":"https://sparsezoo.neuralmagic.com/","skipToChild":null,"metaTitle":"Models","metaDescription":"Models"}}},{"node":{"fields":{"id":"233b31f0-deac-5b52-9101-caf3e3474595","slug":"/products/deepsparse/community","title":"DeepSparse Community"},"frontmatter":{"index":1000,"targetURL":null,"skipToChild":null,"metaTitle":"DeepSparse Community","metaDescription":"Sparsity-aware neural network inference engine for GPU-class performance on CPUs"}}},{"node":{"fields":{"id":"be1fa4d5-bae3-5c19-9da5-f56a08f2fa40","slug":"/products/sparsezoo","title":"SparseZoo"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":null,"metaTitle":"SparseZoo","metaDescription":"Neural network model repository for highly sparse and sparse-quantized models with matching sparsification recipes"}}},{"node":{"fields":{"id":"d6bf031b-89e2-5374-9997-1676f340f25a","slug":"/products/deepsparse/enterprise/cpp-api","title":"C++ API"},"frontmatter":{"index":3000,"targetURL":null,"skipToChild":null,"metaTitle":"DeepSparse C++ API","metaDescription":"Documentation for the C++ APIs available with DeepSparse enabling GPU-class performance on CPUs"}}},{"node":{"fields":{"id":"018cd1d6-6542-547d-ac3b-2743f179ac04","slug":"/products/sparseml/python-api","title":"Python API"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":null,"metaTitle":"SparseML Python API","metaDescription":"Documentation for the Python APIs available with SparseML enabling SOTA model sparsification"}}},{"node":{"fields":{"id":"5e0531ff-a237-587a-a318-72f000810bb0","slug":"/products/deepsparse/enterprise/python-api","title":"Python API"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":null,"metaTitle":"DeepSparse Python API","metaDescription":"Documentation for the Python APIs available with DeepSparse enabling GPU-class performance on CPUs"}}},{"node":{"fields":{"id":"b6a850d0-afc3-5418-ae82-146d2cb68706","slug":"/products/sparseml/cli","title":"CLI"},"frontmatter":{"index":1000,"targetURL":null,"skipToChild":null,"metaTitle":"SparseML CLI","metaDescription":"Documentation for the CLI commands installed with SparseML enabling SOTA model sparsification"}}},{"node":{"fields":{"id":"b386abe1-47d1-5b57-aa77-a3f73f3ebe21","slug":"/products/deepsparse/community/cli","title":"CLI"},"frontmatter":{"index":1000,"targetURL":null,"skipToChild":null,"metaTitle":"DeepSparse CLI","metaDescription":"Documentation for the CLI commands installed with DeepSparse enabling GPU-class performance on CPUs"}}},{"node":{"fields":{"id":"d363f68d-8b46-5da1-a1ef-fc14776d0a03","slug":"/use-cases/natural-language-processing/deploying","title":"Deploying"},"frontmatter":{"index":5000,"targetURL":null,"skipToChild":null,"metaTitle":"NLP Deployments with DeepSparse","metaDescription":"NLP deployments with Hugging Face Transformers and DeepSparse to create cheaper and more performant NLP models"}}},{"node":{"fields":{"id":"4491ba6b-e373-50e3-a8b5-e8e173ecba81","slug":"/index/deploy-workflow","title":"Deploy on CPUs"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":null,"metaTitle":"Deploy on CPUs","metaDescription":"Overview of deployment capabilities in the Neural Magic Platform"}}},{"node":{"fields":{"id":"27a0b7a5-09e0-56ab-9ee5-68f45d8795fd","slug":"/index/optimize-workflow","title":"Optimize for Inference"},"frontmatter":{"index":1000,"targetURL":null,"skipToChild":null,"metaTitle":"Optimize for Inference","metaDescription":"Overview of deployment capabilities in the Neural Magic Platform"}}},{"node":{"fields":{"id":"665dac23-0ae5-5037-a151-d359bad8f8c2","slug":"/get-started/deploy-a-model","title":"Deploy a Model"},"frontmatter":{"index":5000,"targetURL":null,"skipToChild":null,"metaTitle":"Deploy a Model","metaDescription":"Deploy a model with DeepSparse Server for easy and performant ML deployments"}}},{"node":{"fields":{"id":"d79d91ee-f596-5f3a-aafd-02c85a389909","slug":"/products/deepsparse/enterprise","title":"DeepSparse Enterprise"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":null,"metaTitle":"DeepSparse Enterprise","metaDescription":"Sparsity-aware neural network inference engine for GPU-class performance on CPUs"}}},{"node":{"fields":{"id":"cc2c9b73-3a5b-5764-ad54-38c919cb3e78","slug":"/get-started/install","title":"Installation"},"frontmatter":{"index":0,"targetURL":null,"skipToChild":null,"metaTitle":"Install Neural Magic Platform","metaDescription":"Installation instructions for the Neural Magic Platform including DeepSparse, SparseML, SparseZoo"}}},{"node":{"fields":{"id":"fb19b2bb-688f-5f4e-98e0-d1dbf478a015","slug":"/get-started/transfer-a-sparsified-model","title":"Transfer a Sparsified Model"},"frontmatter":{"index":3000,"targetURL":null,"skipToChild":null,"metaTitle":"Transfer a Sparsified Model","metaDescription":"Transfer a Sparsified Model to your dataset, enabling performant deep learning deployments with limited training"}}},{"node":{"fields":{"id":"6cc87df5-f32b-5eff-9f5e-923f64cc150f","slug":"/user-guide","title":"User Guide"},"frontmatter":{"index":3000,"targetURL":null,"skipToChild":true,"metaTitle":"User Guide","metaDescription":"User Guide"}}},{"node":{"fields":{"id":"00c56759-713b-5731-92b9-027dab853257","slug":"/get-started/use-a-model/custom-use-case","title":"Custom Use Case"},"frontmatter":{"index":3000,"targetURL":null,"skipToChild":null,"metaTitle":"Use a Custom Use Case","metaDescription":"Use a Custom Use Case and Model with DeepSparse to deploy for faster and cheaper inference on CPUs"}}},{"node":{"fields":{"id":"5ba330af-8819-52cd-8818-2374113da636","slug":"/get-started/use-a-model","title":"Use a Model"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":null,"metaTitle":"Use a Model","metaDescription":"Use a Model with DeepSparse to deploy for faster and cheaper inference on CPUs"}}},{"node":{"fields":{"id":"c32bcbda-4c9f-5b2a-b18d-5083b0003aef","slug":"/get-started/transfer-a-sparsified-model/nlp-text-classification","title":"NLP Text Classification"},"frontmatter":{"index":1000,"targetURL":null,"skipToChild":null,"metaTitle":"Transfer a Sparsified Model for Text Classification","metaDescription":"Transfer a Sparsified NLP Model to your sentiment analysis dataset enabling performant deep learning deployments with limited training"}}},{"node":{"fields":{"id":"478d6817-c021-5181-922d-2689a65470c5","slug":"/index/quick-tour","title":"Quick Tour"},"frontmatter":{"index":3000,"targetURL":null,"skipToChild":null,"metaTitle":"Quick Tour","metaDescription":"Quick tour of the available functionality"}}},{"node":{"fields":{"id":"3bd4ca0d-2d04-5d9f-9037-06f9ae7dfb73","slug":"/get-started/transfer-a-sparsified-model/cv-object-detection","title":"CV Object Detection"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":null,"metaTitle":"Transfer a Sparsified Model for Object Detection","metaDescription":"Transfer a Sparsified Object Detection Model to your dataset enabling performant deep learning deployments in a faster amount of time"}}},{"node":{"fields":{"id":"5cebfec6-69f9-59bb-9a47-58bd80ce5b29","slug":"/get-started/install/deepsparse","title":"DeepSparse Community"},"frontmatter":{"index":1000,"targetURL":null,"skipToChild":null,"metaTitle":"DeepSparse Community Installation","metaDescription":"Installation instructions for DeepSparse enabling performant neural network deployments"}}},{"node":{"fields":{"id":"8323781e-a7b4-5bb5-a453-86e2c472d6cf","slug":"/get-started/install/deepsparse-ent","title":"DeepSparse Enterprise"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":null,"metaTitle":"DeepSparse Enterprise Installation","metaDescription":"Installation instructions for DeepSparse enabling performant neural network deployments"}}},{"node":{"fields":{"id":"4ac6dd90-ac18-5c3c-8c85-06021527df5e","slug":"/get-started/use-a-model/nlp-text-classification","title":"NLP Text Classification"},"frontmatter":{"index":1000,"targetURL":null,"skipToChild":null,"metaTitle":"Use a Text Classification Model","metaDescription":"Use a NLP Text Classification Model with DeepSparse for faster and cheaper inference on CPUs"}}},{"node":{"fields":{"id":"8efaf662-8889-5bc3-bcae-9868aaa8aa53","slug":"/get-started/sparsify-a-model/supported-integrations","title":"Supported Integrations"},"frontmatter":{"index":1000,"targetURL":null,"skipToChild":null,"metaTitle":"Sparsifying a Model for SparseML Integrations","metaDescription":"Sparsify a model with SparseML and recipes for smaller, faster, and cheaper model inferences in deployment"}}},{"node":{"fields":{"id":"e3c4460c-c09f-5838-8047-fea6cf8f0511","slug":"/products/deepsparse/enterprise/cli","title":"CLI"},"frontmatter":{"index":1000,"targetURL":null,"skipToChild":null,"metaTitle":"DeepSparse CLI","metaDescription":"Documentation for the CLI commands installed with DeepSparse enabling GPU-class performance on CPUs"}}},{"node":{"fields":{"id":"02f4ebab-32cf-58e1-a39b-db269f740d8b","slug":"/get-started/deploy-a-model/cv-object-detection","title":"CV Object Detection"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":null,"metaTitle":"Deploy an Object Detection Model","metaDescription":"Deploy an object detection model with DeepSparse Server for easier, faster, and cheaper inference on CPUs"}}},{"node":{"fields":{"id":"0d2bd4a5-a7f1-508a-8652-91e3eed40ceb","slug":"/products/deepsparse/community/python-api","title":"Python API"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":null,"metaTitle":"DeepSparse Python API","metaDescription":"Documentation for the Python APIs available with DeepSparse enabling GPU-class performance on CPUs"}}},{"node":{"fields":{"id":"f92e631d-dc67-592a-b7c2-dd4bb5e7a3fe","slug":"/products/deepsparse/community/cpp-api","title":"C++ API"},"frontmatter":{"index":3000,"targetURL":null,"skipToChild":null,"metaTitle":"DeepSparse C++ API","metaDescription":"Documentation for the C++ APIs available with DeepSparse enabling GPU-class performance on CPUs"}}},{"node":{"fields":{"id":"a597113f-8c9b-5620-baaa-95555edb534c","slug":"/details/faqs","title":"FAQs"},"frontmatter":{"index":4000,"targetURL":null,"skipToChild":null,"metaTitle":"FAQs","metaDescription":"FAQs for the Neural Magic Platform"}}},{"node":{"fields":{"id":"6662f291-f43f-5616-8f60-dea883911f57","slug":"/get-started/sparsify-a-model/custom-integrations","title":"Custom Integrations"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":null,"metaTitle":"Creating a Custom Integration for Sparsifying Models","metaDescription":"Creating a Custom Integration for Sparsifying Models with SparseML for smaller, faster, and cheaper model inferences in deployment"}}},{"node":{"fields":{"id":"f2d385fc-cb79-5c11-8873-f4e6f6d6da23","slug":"/details/glossary","title":"Glossary"},"frontmatter":{"index":3000,"targetURL":null,"skipToChild":null,"metaTitle":"Glossary","metaDescription":"Glossary for the Neural Magic product"}}},{"node":{"fields":{"id":"dc9f9ab1-1fb3-57b4-910a-fa3200519b0d","slug":"/get-started/install/sparseml","title":"SparseML"},"frontmatter":{"index":3000,"targetURL":null,"skipToChild":null,"metaTitle":"SparseML Installation","metaDescription":"Installation instructions for SparseML neural network optimization, training, and sparsification"}}},{"node":{"fields":{"id":"ac411c38-91fa-56bf-8dfd-c00cab6602ad","slug":"/get-started/install/sparsezoo","title":"SparseZoo"},"frontmatter":{"index":4000,"targetURL":null,"skipToChild":null,"metaTitle":"SparseZoo Installation","metaDescription":"Installation instructions for the SparseZoo sparse model repository"}}},{"node":{"fields":{"id":"e5f9763e-9c0a-5d84-9f65-550685441793","slug":"/details/research-papers","title":"Research Papers"},"frontmatter":{"index":1000,"targetURL":"https://neuralmagic.com/resources/technical-papers/","skipToChild":null,"metaTitle":"Research Papers","metaDescription":"Research Papers"}}},{"node":{"fields":{"id":"7d12ac36-8c45-565c-9b28-6472fdeb4a99","slug":"/get-started/deploy-a-model/nlp-text-classification","title":"NLP Text Classification"},"frontmatter":{"index":1000,"targetURL":null,"skipToChild":null,"metaTitle":"Deploy a Text Classification Model","metaDescription":"Deploy a text classification model with DeepSparse Server for easier, faster, and cheaper inference on CPUs"}}},{"node":{"fields":{"id":"5689a5f7-7564-5b91-b21d-0f6aed1218a9","slug":"/get-started/use-a-model/cv-object-detection","title":"CV Object Detection"},"frontmatter":{"index":2000,"targetURL":null,"skipToChild":null,"metaTitle":"Use an Object Detection Model","metaDescription":"Use an Object Detection Model with DeepSparse to deploy for faster and cheaper inference on CPUs"}}},{"node":{"fields":{"id":"43a5dd03-4ffe-5c02-ac47-7ee94de63602","slug":"/get-started/sparsify-a-model","title":"Sparsify a Model"},"frontmatter":{"index":4000,"targetURL":null,"skipToChild":null,"metaTitle":"Sparsify a Model","metaDescription":"Sparsify a model with SparseML and recipes for smaller, faster, and cheaper model inferences in deployment"}}}]}},"pageContext":{"id":"d79d91ee-f596-5f3a-aafd-02c85a389909","pageType":"docs"}},"staticQueryHashes":[]}