"use strict";(self.webpackChunkdocs_neuralmagic_com=self.webpackChunkdocs_neuralmagic_com||[]).push([[580],{4512:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>a});var i=o(4848),s=o(8453);const l={description:"Deploy DeepSparse in a Serverless framework with Google Cloud Run.",sidebar_label:"Google Cloud Run",sidebar_position:4},r="Deploying With DeepSparse on GCP Cloud Run",t={id:"guides/deploying-deepsparse/google-cloud-run",title:"Deploying With DeepSparse on GCP Cloud Run",description:"Deploy DeepSparse in a Serverless framework with Google Cloud Run.",source:"@site/versioned_docs/version-1.7.0/guides/deploying-deepsparse/google-cloud-run.mdx",sourceDirName:"guides/deploying-deepsparse",slug:"/guides/deploying-deepsparse/google-cloud-run",permalink:"/guides/deploying-deepsparse/google-cloud-run",draft:!1,unlisted:!1,editUrl:"https://github.com/neuralmagic/docs/tree/main/docs/guides/deploying-deepsparse/google-cloud-run.mdx",tags:[],version:"1.7.0",sidebarPosition:4,frontMatter:{description:"Deploy DeepSparse in a Serverless framework with Google Cloud Run.",sidebar_label:"Google Cloud Run",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"AWS Lambda",permalink:"/guides/deploying-deepsparse/aws-lambda"},next:{title:"Products",permalink:"/products/"}},d={},a=[{value:"Requirements",id:"requirements",level:2},{value:"Installation",id:"installation",level:2},{value:"Model Configuration",id:"model-configuration",level:2},{value:"Create Endpoint",id:"create-endpoint",level:2},{value:"Call Endpoint",id:"call-endpoint",level:2},{value:"Delete Endpoint",id:"delete-endpoint",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"deploying-with-deepsparse-on-gcp-cloud-run",children:"Deploying With DeepSparse on GCP Cloud Run"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://cloud.google.com/run",children:"GCP's Cloud Run"})," is a serverless, event-driven environment for making quick deployments for various applications including machine learning in various programming languages.\nSince DeepSparse runs on commodity CPUs, you can deploy DeepSparse on Cloud Run!"]}),"\n",(0,i.jsxs)(n.p,{children:["The DeepSparse GitHub repo contains a ",(0,i.jsx)(n.a,{href:"https://github.com/neuralmagic/deepsparse/tree/main/examples/google-cloud-run",children:"guided example"}),"\nfor deploying a DeepSparse Pipeline on GCP Cloud Run for the token classification task."]}),"\n",(0,i.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,i.jsxs)(n.p,{children:["The listed steps can be easily completed using ",(0,i.jsx)(n.code,{children:"Python"})," and ",(0,i.jsx)(n.code,{children:"Bash"}),". The following tools, and libraries are also required:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.a,{href:"https://cloud.google.com/sdk/gcloud",children:"gcloud CLI"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.a,{href:"https://docs.docker.com/get-docker/",children:["Docker and the ",(0,i.jsx)(n.code,{children:"docker"})," cli"]}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Before starting, replace the ",(0,i.jsx)(n.code,{children:"billing_id"})," PLACEHOLDER with your own GCP billing ID at the bottom of the SparseRun class in the ",(0,i.jsx)(n.code,{children:"endpoint.py"})," file. It should be alphanumeric and look something like this: ",(0,i.jsx)(n.code,{children:"XXXXX-XXXXX-XXXXX"}),"."]})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Your billing id can be found in the ",(0,i.jsx)(n.code,{children:"BILLING"})," menu of your GCP console or you can run the following ",(0,i.jsx)(n.code,{children:"gcloud"})," command to get a list of all of your billing ids:"]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"gcloud beta billing accounts list\n"})}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/neuralmagic/deepsparse.git\ncd deepsparse/examples/google-cloud-run\n"})}),"\n",(0,i.jsx)(n.h2,{id:"model-configuration",children:"Model Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["The current server configuration is running ",(0,i.jsx)(n.code,{children:"token classification"}),". To alter the model, task or other parameters (e.g., number of cores, workers, routes or batch size), edit the ",(0,i.jsx)(n.code,{children:"config.yaml"})," file."]}),"\n",(0,i.jsx)(n.h2,{id:"create-endpoint",children:"Create Endpoint"}),"\n",(0,i.jsx)(n.p,{children:"Run the following command to build the Cloud Run endpoint."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"python endpoint.py create\n"})}),"\n",(0,i.jsx)(n.h2,{id:"call-endpoint",children:"Call Endpoint"}),"\n",(0,i.jsxs)(n.p,{children:["After the endpoint has been staged (~3 minutes), gcloud CLI will output the API Service URL. You can start making requests by passing this URL ",(0,i.jsx)(n.strong,{children:"AND"})," its route (found in ",(0,i.jsx)(n.code,{children:"config.yaml"}),") into the ",(0,i.jsx)(n.code,{children:"CloudRunClient"})," object."]}),"\n",(0,i.jsxs)(n.p,{children:["For example, if the Service URL is ",(0,i.jsx)(n.code,{children:"https://deepsparse-cloudrun-qsi36y4uoa-ue.a.run.app"})," and the route is ",(0,i.jsx)(n.code,{children:"/inference"}),", the URL passed into the client would be: ",(0,i.jsx)(n.code,{children:"https://deepsparse-cloudrun-qsi36y4uoa-ue.a.run.app/inference"})]}),"\n",(0,i.jsx)(n.p,{children:"Afterwards, call your endpoint by passing in the text input:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from client import CloudRunClient\n\nCR = CloudRunClient(\"https://deepsparse-cloudrun-qsi36y4uoa-ue.a.run.app/inference\")\nanswer = CR.client(\"Drive from California to Texas!\")\nprint(answer)\n\n# <output>\n# [{'entity': 'LABEL_0','word': 'drive', ...},\n# {'entity': 'LABEL_0','word': 'from', ...},\n# {'entity': 'LABEL_5','word': 'california', ...},\n# {'entity': 'LABEL_0','word': 'to', ...},\n# {'entity': 'LABEL_5','word': 'texas', ...},\n# {'entity': 'LABEL_0','word': '!', ...}]\n# </output>\n"})}),"\n",(0,i.jsx)(n.p,{children:"Additionally, you can also call the endpoint via a cURL command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -X 'POST' \\\n  'https://deepsparse-cloudrun-qsi36y4uoa-ue.a.run.app/inference' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"inputs\": [\n    \"Drive from California to Texas!\"\n  ],\n  \"is_split_into_words\": false\n}'\n"})}),"\n",(0,i.jsx)(n.p,{children:"FYI, on the first cold start, it will take a ~60 seconds to get your first inference, but afterwards, it should be in milliseconds."}),"\n",(0,i.jsx)(n.h2,{id:"delete-endpoint",children:"Delete Endpoint"}),"\n",(0,i.jsx)(n.p,{children:"If you want to delete the Cloud Run endpoint, run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"python endpoint.py destroy\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>t});var i=o(6540);const s={},l=i.createContext(s);function r(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);